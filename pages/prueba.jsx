import React from 'react'
import cheerio from 'cheerio'
import axios from 'axios'
import Image from 'next/image'
const prueba = (props) => {
  return (
    <div>
      {
        props.news.map((newsItem, i) => (
          <div key={i}>
            <h1>{newsItem.title}</h1>
            <Image src={props.imagesUrls[i]} width={800} height={700} alt='newsImages' />
          </div>
        ))
        }
      <img src={props.html} />
    </div>
  )
}

async function getImageUrl (url) {
  const { data } = await axios.get(url)
  const $ = cheerio.load(data)
  return $('.ArticleContent_article__NBhQ8 img').attr('src')
}

export async function getStaticProps () {
  const headersList = {
    Accept: '*/*',
    'User-Agent': 'Thunder Client (https://www.thunderclient.com)',
    'X-RapidAPI-Key': 'e8079d9059mshaf2885320dead3bp16650ejsne54672d3a921'
  }
  const response = await fetch('https://nba-latest-news.p.rapidapi.com/articles?source=nba', {
    method: 'GET',
    headers: headersList
  })
  const news = await response.json()

  const imagesUrls = []
  const defaultImageUrl = '/path/to/default-image.jpg'
  for (const newsItem of news) {
    const imageUrl = await getImageUrl(newsItem.url)
    if (imageUrl) {
      imagesUrls.push(imageUrl)
    } else {
      imagesUrls.push(defaultImageUrl)
    }
  }

  return {
    props: { news, imagesUrls },
    revalidate: 10 // rerun after 10 seconds
  }
}

export default prueba


import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import axios from 'axios'
import cheerio from 'cheerio'
import MenuBar from '../components/MenuBar/index'
import { NavBar } from '../styles/pages/LandingPage'
import TeamListBar from '../components/TeamListBar'
import Frame from '../components/Frame'
import LoadingPage from '../components/LoadingPage'
import { useEffect, useState } from 'react'

export default function News () {
  // return {
  //   props: { news, imagesUrls },
  //   revalidate: 10 // rerun after 10 seconds
  // }
  const [isLoading, setIsLoading] = useState(true)
  const [data, setData] = useState([])
  const [image, setImage] = useState([])

  const getNews = async () => {
    const headersList = {
      Accept: '*/*',
      'User-Agent': 'Thunder Client (https://www.thunderclient.com)',
      'X-RapidAPI-Key': '8acd110f16msh8ab908907b8a392p1b1f53jsn59199f328434'
    }
    const response = await fetch('https://nba-latest-news.p.rapidapi.com/articles?source=nba', {
      method: 'GET',
      headers: headersList
    })
    const news = await response.json()
    const imagesUrls = []
    const defaultImageUrl = 'defaultImage.jpg'
    for (const newsItem of news) {
      console.log(newsItem)
      try {
        const imageUrl = await getImageUrl(newsItem.url)
        imagesUrls.push(imageUrl)
      } catch (error) {
        imagesUrls.push(defaultImageUrl)
        console.log(error)
      }
    }
    setIsLoading(false)
    setData(news)
    setImage(imagesUrls)
  }

  useEffect(() => {
    getNews()
  }, [])
  console.log(isLoading)
  return (
    <div>
      {isLoading
        ? (
          <LoadingPage />
          )
        : (
          <>
            <Head>
              <title>NBA-App</title>
              <link rel='icon' href='/Logo-NBA.png' />
              <meta
                name='description'
                content='Generated by create next app'
              />
            </Head>
            <NavBar>
              <Link href='/'>
                <Image src='/app-logo/Logo-NBA.png' width={100} height={57} alt='logoNBA' priority />
              </Link>
              <MenuBar teamName='Logo-NBA' />
            </NavBar>
            <TeamListBar />
            <Frame
              teamName='NEWS'
              news={data}
              imagesUrls={image}
            />
          </>
          )}
    </div>
  )
}

async function getImageUrl (url) {
  const { data } = await axios.get(url)
  const $ = cheerio.load(data)
  return $('.ArticleContent_article__NBhQ8 img').attr('src')
}
